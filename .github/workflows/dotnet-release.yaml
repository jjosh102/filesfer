
name: C# Console App Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build_and_publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            archive_extension: .tar.gz
          - os: windows-latest
            runtime: win-x64
            archive_extension: .zip

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Cache .NET SDK
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            !~/.nuget/packages/unwanted-package
            C:\Users\runneradmin\AppData\Local\Temp\NuGetScratch
            !C:\Users\runneradmin\AppData\Local\Temp\NuGetScratch\unwanted-package
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/Filesfer.Cli.csproj') }}
          
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        run: dotnet restore src/Filesfer.Cli

      - name: Publish Self-Contained Executable
        run: dotnet publish src/Filesfer.Cli -c Release -r ${{ matrix.runtime }} --self-contained true

      - name: Archive Linux Output
        id: archive-linux
        if: runner.os == 'Linux'
        run: |
          TAG_NAME=${{ github.ref_name }}
          ARCHIVE_NAME="filesfer-cli-${TAG_NAME}-${{ matrix.runtime }}${{ matrix.archive_extension }}"
          cd "src/Filesfer.Cli/bin/Release/net9.0/${{ matrix.runtime }}/publish"
          tar -czf "../../../../$ARCHIVE_NAME" .
          echo "archive_name=$ARCHIVE_NAME" >> $GITHUB_OUTPUT
      
      - name: Archive Windows Output
        id: archive-windows
        if: runner.os == 'Windows'
        run: |
          $TAG_NAME = "${{ github.ref_name }}"
          $ARCHIVE_NAME = "filesfer-cli-$TAG_NAME-${{ matrix.runtime }}${{ matrix.archive_extension }}"
          # Use 7z to create the zip file.
          # The -r flag is for recursive, and -tzip specifies zip format.
          7z a "$ARCHIVE_NAME" "src/Filesfer.Cli/bin/Release/net9.0/${{ matrix.runtime }}/publish/*"
          echo "archive_name=$ARCHIVE_NAME" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8
          
      - name: Create Release and Upload Executable
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.archive-linux.outputs.archive_name || steps.archive-windows.outputs.archive_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}

